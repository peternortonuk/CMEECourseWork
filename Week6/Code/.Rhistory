setwd("~/Documents/CMEECourseWork/Week6/Code")
#!/usr/bin/env Rscript
#Bioinformatics Week6
#R Studio Version 1.1.383 ubuntu 16.04 LTS 64bi
#Author Petra Guy 7th November 2017
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
graphics.off()
rm(list = ls())
# read in data and make AA,Aa, frequency rows
args <- commandArgs(TRUE)
InputFileName <- as.character(args[1])
Outputfilename <- as.character(args[2])
pathnameIn = paste("../Data",InputFileName, sep = "/")
pathnameOut = paste("../Results",Outputfilename, sep = '/')
MyData = read.table(file = pathnameIn, header = TRUE)
#MyData <- read.table(file="../Data/H938_chr15.geno", header=TRUE)
#print(head(MyData))
#do the frequencies thing
MyData <- mutate(MyData, nObs = nA1A1 + nA1A2 + nA2A2)
MyData <- mutate(MyData, p11 = nA1A1/nObs , p12 = nA1A2/nObs, p22 = nA2A2/nObs )
MyData <- mutate(MyData, p1 = p11 + 0.5*p12, p2 = p22 + 0.5*p12)
MyData <- mutate(MyData, X2 = (nA1A1-nObs*p1^2)^2 /(nObs*p1^2) + (nA1A2-nObs*2*p1*p2)^2 / (nObs*2*p1*p2) + (nA2A2-nObs*p2^2)^2 / (nObs*p2^2))
MyData <- mutate(MyData,pval = 1-pchisq(X2,1))
MyData = mutate(MyData, F = (2*p1*(1-p1)-p12)/ (2*p1*(1-p1)))
#print(head(MyData))
#Observed versus expected values
#pathnameOut = "../Results/TestObs"
print(pathnameOut)
pdf(pathnameOut,  11.7, 8.3)
myplot = qplot(2*p1*(1-p1), p12, data = MyData) + geom_abline(intercept = 0, slope=1, color="red", size=1.5)
print(myplot)
dev.off()
#!/usr/bin/env Rscript
#Bioinformatics Week6
#R Studio Version 1.1.383 ubuntu 16.04 LTS 64bi
#Author Petra Guy 7th November 2017
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
g <- read.table(file="../Data/H938_chr15.geno", header=TRUE)
g <- mutate(g, nObs = nA1A1 + nA1A2 + nA2A2)
summary(g$nObs)
#this just plots total numbe of obs, if the data is good,
# all the counts will be in the top bin
qplot(nObs, binwidth =5,  data = g)
g <- mutate(g, p11 = nA1A1/nObs , p12 = nA1A2/nObs, p22 = nA2A2/nObs )
g <- mutate(g, p1 = p11 + 0.5*p12, p2 = p22 + 0.5*p12)
qplot(p1, p2, data=g)
gTidy <- select(g, c(p1,p11,p12,p22)) %>% melt(id='p1',value.name="Genotype.Proportion")
ggplot(gTidy) + geom_point(aes(x = p1, y = Genotype.Proportion, color = variable, shape = variable))
ggplot(gTidy)+ geom_point(aes(x=p1,y=Genotype.Proportion, color=variable,shape=variable))+
stat_function(fun=function(p) p^2, geom="line", colour="red",size=2.5) +
stat_function(fun=function(p) 2*p*(1-p), geom="line", colour="green",size=2.5) +
stat_function(fun=function(p) (1-p)^2, geom="line", colour="blue",size=2.5)
g <- mutate(g, X2 = (nA1A1-nObs*p1^2)^2 /(nObs*p1^2) + (nA1A2-nObs*2*p1*p2)^2 / (nObs*2*p1*p2) + (nA2A2-nObs*p2^2)^2 / (nObs*p2^2))
g <- mutate(g,pval = 1-pchisq(X2,1))
sum(g$pval < 0.05, na.rm = TRUE)
qplot(pval, data = g)
qplot(2*p1*(1-p1), p12, data = g) + geom_abline(intercept = 0, slope=1, color="red", size=1.5)
g <- mutate(g, F = (2*p1*(1-p1)-p12) / (2*p1*(1-p1)))
plot(g$F, xlab = "SNP number")
movingavg <- function(x, n=5){stats::filter(x, rep(1/n,n), sides = 2)}
plot(movingavg(g$F), xlab="SNP number")
outlier = which(movingavg(g$F) == max(movingavg(g$F),na.rm=TRUE))
g[outlier,]
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
graphics.off()
rm(list = ls())
# read in data and make AA,Aa, frequency rows
args <- commandArgs(TRUE)
InputFileName <- as.character(args[1])
Outputfilename <- as.character(args[2])
pathnameIn = paste("../Data",InputFileName, sep = "/")
pathnameOut = paste("../Results",Outputfilename, sep = '/')
MyData = read.table(file = pathnameIn, header = TRUE)
#MyData <- read.table(file="../Data/H938_chr15.geno", header=TRUE)
#do the frequencies thing
MyData <- mutate(MyData, nObs = nA1A1 + nA1A2 + nA2A2)
MyData <- mutate(MyData, p11 = nA1A1/nObs , p12 = nA1A2/nObs, p22 = nA2A2/nObs )
MyData <- mutate(MyData, p1 = p11 + 0.5*p12, p2 = p22 + 0.5*p12)
MyData <- mutate(MyData, X2 = (nA1A1-nObs*p1^2)^2 /(nObs*p1^2) + (nA1A2-nObs*2*p1*p2)^2 / (nObs*2*p1*p2) + (nA2A2-nObs*p2^2)^2 / (nObs*p2^2))
MyData <- mutate(MyData,pval = 1-pchisq(X2,1))
MyData = mutate(MyData, F = (2*p1*(1-p1)-p12)/ (2*p1*(1-p1)))
#OMoving average
movingavg <- function(x, n=5){stats::filter(x, rep(1/n,n), sides = 2)}
pdf(pathnameOut,11.7, 8.3)
Myplot = plot(movingavg(MyData$F), xlab="SNP number")
print(Myplot)
dev.off()
movingavg <- function(x, n=5){stats::filter(x, rep(1/n,n), sides = 2)}
pdf(pathnameOut,11.7, 8.3)
Myplot = plot(movingavg(MyData$F), xlab="SNP number")
print(Myplot)
dev.off()
#!/usr/bin/env Rscript
#Bioinformatics Week6
#R Studio Version 1.1.383 ubuntu 16.04 LTS 64bi
#Author Petra Guy 7th November 2017
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
graphics.off()
rm(list = ls())
# read in data and make AA,Aa, frequency rows
args <- commandArgs(TRUE)
InputFileName <- as.character(args[1])
Outputfilename <- as.character(args[2])
pathnameIn = paste("../Data",InputFileName, sep = "/")
pathnameOut = paste("../Results",Outputfilename, sep = '/')
MyData = read.table(file = pathnameIn, header = TRUE)
#MyData <- read.table(file="../Data/H938_chr15.geno", header=TRUE)
#do the frequencies thing
MyData <- mutate(MyData, nObs = nA1A1 + nA1A2 + nA2A2)
MyData <- mutate(MyData, p11 = nA1A1/nObs , p12 = nA1A2/nObs, p22 = nA2A2/nObs )
MyData <- mutate(MyData, p1 = p11 + 0.5*p12, p2 = p22 + 0.5*p12)
MyData <- mutate(MyData, X2 = (nA1A1-nObs*p1^2)^2 /(nObs*p1^2) + (nA1A2-nObs*2*p1*p2)^2 / (nObs*2*p1*p2) + (nA2A2-nObs*p2^2)^2 / (nObs*p2^2))
MyData <- mutate(MyData,pval = 1-pchisq(X2,1))
MyData = mutate(MyData, F = (2*p1*(1-p1)-p12)/ (2*p1*(1-p1)))
#OMoving average
movingavg <- function(x, n=5){stats::filter(x, rep(1/n,n), sides = 2)}
pdf(pathnameOut,11.7, 8.3)
Myplot = plot(movingavg(MyData$F), xlab="SNP number")
print(Myplot)
dev.off()
#!/usr/bin/env Rscript
#Bioinformatics Week6
#R Studio Version 1.1.383 ubuntu 16.04 LTS 64bi
#Author Petra Guy 7th November 2017
library(dplyr)
library(ggplot2)
library(reshape2)
library(stats)
graphics.off()
rm(list = ls())
# read in data and make AA,Aa, frequency rows
args <- commandArgs(TRUE)
InputFileName <- as.character(args[1])
Outputfilename <- as.character(args[2])
pathnameIn = paste("../Data",InputFileName, sep = "/")
pathnameOut = paste("../Results",Outputfilename, sep = '/')
MyData = read.table(file = pathnameIn, header = TRUE)
#MyData <- read.table(file="../Data/H938_chr15.geno", header=TRUE)
#do the frequencies thing
MyData <- mutate(MyData, nObs = nA1A1 + nA1A2 + nA2A2)
MyData <- mutate(MyData, p11 = nA1A1/nObs , p12 = nA1A2/nObs, p22 = nA2A2/nObs )
MyData <- mutate(MyData, p1 = p11 + 0.5*p12, p2 = p22 + 0.5*p12)
MyData <- mutate(MyData, X2 = (nA1A1-nObs*p1^2)^2 /(nObs*p1^2) + (nA1A2-nObs*2*p1*p2)^2 / (nObs*2*p1*p2) + (nA2A2-nObs*p2^2)^2 / (nObs*p2^2))
MyData <- mutate(MyData,pval = 1-pchisq(X2,1))
MyData = mutate(MyData, F = (2*p1*(1-p1)-p12)/ (2*p1*(1-p1)))
#OMoving average
movingavg <- function(x, n=5){stats::filter(x, rep(1/n,n), sides = 2)}
pdf(pathnameOut,11.7, 8.3)
Myplot = plot(movingavg(MyData$F), xlab="SNP number")
print(Myplot)
movingavg <- function(x, n=5){stats::filter(x, rep(1/n,n), sides = 2)}
pdf(pathnameOut,11.7, 8.3)
Myplot = plot(movingavg(MyData$F), xlab="SNP number")
print(Myplot)
pdf(pathnameOut,11.7, 8.3)
Myplot = plot(movingavg(MyData$F), xlab="SNP number")
#do the frequencies thing
MyData <- mutate(MyData, nObs = nA1A1 + nA1A2 + nA2A2)
MyData <- mutate(MyData, p11 = nA1A1/nObs , p12 = nA1A2/nObs, p22 = nA2A2/nObs )
MyData <- mutate(MyData, p1 = p11 + 0.5*p12, p2 = p22 + 0.5*p12)
MyData <- mutate(MyData, X2 = (nA1A1-nObs*p1^2)^2 /(nObs*p1^2) + (nA1A2-nObs*2*p1*p2)^2 / (nObs*2*p1*p2) + (nA2A2-nObs*p2^2)^2 / (nObs*p2^2))
MyData <- mutate(MyData,pval = 1-pchisq(X2,1))
MyData = mutate(MyData, F = (2*p1*(1-p1)-p12)/ (2*p1*(1-p1)))
MyData = read.table(file = pathnameIn, header = TRUE)
